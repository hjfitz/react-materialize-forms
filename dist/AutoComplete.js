import React, { useEffect } from 'react';
import PropTypes from 'prop-types';
import uniqid from 'uniqid';
import M from 'materialize-css';

function AutoComplete(props) {
  const uId = `autocomplete-${uniqid()}`;
  const {
    s,
    m,
    l,
    xl,
    placeholder,
    onChange,
    value,
    data
  } = props;
  const small = s || 12;
  const medium = m || small;
  const large = l || medium;
  const extra = xl || large;
  useEffect(() => {
    const elem = document.querySelector(`#${uId}`);
    M.Autocomplete.init(elem, {
      data,
      onAutocomplete: onChange
    });
  }, []);
  return React.createElement("div", {
    className: `input-field col s${small} m${medium} l${large} xl${extra}`
  }, React.createElement("input", {
    type: "text",
    id: uId,
    className: "autocomplete",
    value: value || null,
    placeholder: placeholder,
    onChange: e => onChange(e.target.value)
  }));
}

AutoComplete.propTypes = {
  s: PropTypes.number,
  m: PropTypes.number,
  l: PropTypes.number,
  xl: PropTypes.number,
  placeholder: PropTypes.string,
  data: PropTypes.arrayOf(PropTypes.shape({
    name: PropTypes.string.isRequired
  })),
  onChange: PropTypes.func,
  value: PropTypes.string
};
AutoComplete.defaultProps = {
  s: 12,
  m: 12,
  l: 12,
  xl: 12,
  placeholder: null,
  data: [],
  onChange: null,
  value: null
};
export default AutoComplete;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9BdXRvQ29tcGxldGUuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJQcm9wVHlwZXMiLCJ1bmlxaWQiLCJNIiwiQXV0b0NvbXBsZXRlIiwicHJvcHMiLCJ1SWQiLCJzIiwibSIsImwiLCJ4bCIsInBsYWNlaG9sZGVyIiwib25DaGFuZ2UiLCJ2YWx1ZSIsImRhdGEiLCJzbWFsbCIsIm1lZGl1bSIsImxhcmdlIiwiZXh0cmEiLCJlbGVtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiQXV0b2NvbXBsZXRlIiwiaW5pdCIsIm9uQXV0b2NvbXBsZXRlIiwiZSIsInRhcmdldCIsInByb3BUeXBlcyIsIm51bWJlciIsInN0cmluZyIsImFycmF5T2YiLCJzaGFwZSIsIm5hbWUiLCJpc1JlcXVpcmVkIiwiZnVuYyIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsS0FBUCxJQUFnQkMsU0FBaEIsUUFBaUMsT0FBakM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixRQUFuQjtBQUNBLE9BQU9DLENBQVAsTUFBYyxpQkFBZDs7QUFFQSxTQUFTQyxZQUFULENBQXNCQyxLQUF0QixFQUE2QjtBQUMzQixRQUFNQyxHQUFHLEdBQUksZ0JBQWVKLE1BQU0sRUFBRyxFQUFyQztBQUNBLFFBQU07QUFDSkssSUFBQUEsQ0FESTtBQUNEQyxJQUFBQSxDQURDO0FBQ0VDLElBQUFBLENBREY7QUFDS0MsSUFBQUEsRUFETDtBQUNTQyxJQUFBQSxXQURUO0FBQ3NCQyxJQUFBQSxRQUR0QjtBQUNnQ0MsSUFBQUEsS0FEaEM7QUFDdUNDLElBQUFBO0FBRHZDLE1BRUZULEtBRko7QUFHQSxRQUFNVSxLQUFLLEdBQUdSLENBQUMsSUFBSSxFQUFuQjtBQUNBLFFBQU1TLE1BQU0sR0FBR1IsQ0FBQyxJQUFJTyxLQUFwQjtBQUNBLFFBQU1FLEtBQUssR0FBR1IsQ0FBQyxJQUFJTyxNQUFuQjtBQUNBLFFBQU1FLEtBQUssR0FBR1IsRUFBRSxJQUFJTyxLQUFwQjtBQUNBakIsRUFBQUEsU0FBUyxDQUFDLE1BQU07QUFDZCxVQUFNbUIsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBd0IsSUFBR2YsR0FBSSxFQUEvQixDQUFiO0FBQ0FILElBQUFBLENBQUMsQ0FBQ21CLFlBQUYsQ0FBZUMsSUFBZixDQUFvQkosSUFBcEIsRUFBMEI7QUFDeEJMLE1BQUFBLElBRHdCO0FBRXhCVSxNQUFBQSxjQUFjLEVBQUVaO0FBRlEsS0FBMUI7QUFJRCxHQU5RLEVBTU4sRUFOTSxDQUFUO0FBUUEsU0FDRTtBQUFLLElBQUEsU0FBUyxFQUFHLG9CQUFtQkcsS0FBTSxLQUFJQyxNQUFPLEtBQUlDLEtBQU0sTUFBS0MsS0FBTTtBQUExRSxLQUNFO0FBQU8sSUFBQSxJQUFJLEVBQUMsTUFBWjtBQUFtQixJQUFBLEVBQUUsRUFBRVosR0FBdkI7QUFBNEIsSUFBQSxTQUFTLEVBQUMsY0FBdEM7QUFBcUQsSUFBQSxLQUFLLEVBQUVPLEtBQUssSUFBSSxJQUFyRTtBQUEyRSxJQUFBLFdBQVcsRUFBRUYsV0FBeEY7QUFBcUcsSUFBQSxRQUFRLEVBQUdjLENBQUQsSUFBUWIsUUFBUSxDQUFDYSxDQUFDLENBQUNDLE1BQUYsQ0FBU2IsS0FBVjtBQUEvSCxJQURGLENBREY7QUFLRDs7QUFFRFQsWUFBWSxDQUFDdUIsU0FBYixHQUF5QjtBQUNyQnBCLEVBQUFBLENBQUMsRUFBRU4sU0FBUyxDQUFDMkIsTUFEUTtBQUVyQnBCLEVBQUFBLENBQUMsRUFBRVAsU0FBUyxDQUFDMkIsTUFGUTtBQUdyQm5CLEVBQUFBLENBQUMsRUFBRVIsU0FBUyxDQUFDMkIsTUFIUTtBQUlyQmxCLEVBQUFBLEVBQUUsRUFBRVQsU0FBUyxDQUFDMkIsTUFKTztBQUtyQmpCLEVBQUFBLFdBQVcsRUFBRVYsU0FBUyxDQUFDNEIsTUFMRjtBQU1yQmYsRUFBQUEsSUFBSSxFQUFFYixTQUFTLENBQUM2QixPQUFWLENBQWtCN0IsU0FBUyxDQUFDOEIsS0FBVixDQUFnQjtBQUN0Q0MsSUFBQUEsSUFBSSxFQUFFL0IsU0FBUyxDQUFDNEIsTUFBVixDQUFpQkk7QUFEZSxHQUFoQixDQUFsQixDQU5lO0FBU3JCckIsRUFBQUEsUUFBUSxFQUFFWCxTQUFTLENBQUNpQyxJQVRDO0FBVXJCckIsRUFBQUEsS0FBSyxFQUFFWixTQUFTLENBQUM0QjtBQVZJLENBQXpCO0FBYUF6QixZQUFZLENBQUMrQixZQUFiLEdBQTRCO0FBQ3hCNUIsRUFBQUEsQ0FBQyxFQUFFLEVBRHFCO0FBRXhCQyxFQUFBQSxDQUFDLEVBQUUsRUFGcUI7QUFHeEJDLEVBQUFBLENBQUMsRUFBRSxFQUhxQjtBQUl4QkMsRUFBQUEsRUFBRSxFQUFFLEVBSm9CO0FBS3hCQyxFQUFBQSxXQUFXLEVBQUUsSUFMVztBQU14QkcsRUFBQUEsSUFBSSxFQUFFLEVBTmtCO0FBT3hCRixFQUFBQSxRQUFRLEVBQUUsSUFQYztBQVF4QkMsRUFBQUEsS0FBSyxFQUFFO0FBUmlCLENBQTVCO0FBV0EsZUFBZVQsWUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHVuaXFpZCBmcm9tICd1bmlxaWQnO1xuaW1wb3J0IE0gZnJvbSAnbWF0ZXJpYWxpemUtY3NzJztcblxuZnVuY3Rpb24gQXV0b0NvbXBsZXRlKHByb3BzKSB7XG4gIGNvbnN0IHVJZCA9IGBhdXRvY29tcGxldGUtJHt1bmlxaWQoKX1gO1xuICBjb25zdCB7XG4gICAgcywgbSwgbCwgeGwsIHBsYWNlaG9sZGVyLCBvbkNoYW5nZSwgdmFsdWUsIGRhdGEsXG4gIH0gPSBwcm9wcztcbiAgY29uc3Qgc21hbGwgPSBzIHx8IDEyO1xuICBjb25zdCBtZWRpdW0gPSBtIHx8IHNtYWxsO1xuICBjb25zdCBsYXJnZSA9IGwgfHwgbWVkaXVtO1xuICBjb25zdCBleHRyYSA9IHhsIHx8IGxhcmdlO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGVsZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHt1SWR9YCk7XG4gICAgTS5BdXRvY29tcGxldGUuaW5pdChlbGVtLCB7XG4gICAgICBkYXRhLFxuICAgICAgb25BdXRvY29tcGxldGU6IG9uQ2hhbmdlLFxuICAgIH0pO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17YGlucHV0LWZpZWxkIGNvbCBzJHtzbWFsbH0gbSR7bWVkaXVtfSBsJHtsYXJnZX0geGwke2V4dHJhfWB9PlxuICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9e3VJZH0gY2xhc3NOYW1lPVwiYXV0b2NvbXBsZXRlXCIgdmFsdWU9e3ZhbHVlIHx8IG51bGx9IHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn0gb25DaGFuZ2U9eyhlKSA9PiAob25DaGFuZ2UoZS50YXJnZXQudmFsdWUpKX0gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuQXV0b0NvbXBsZXRlLnByb3BUeXBlcyA9IHtcbiAgICBzOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIG06IFByb3BUeXBlcy5udW1iZXIsXG4gICAgbDogUHJvcFR5cGVzLm51bWJlcixcbiAgICB4bDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBwbGFjZWhvbGRlcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBkYXRhOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIH0pKSxcbiAgICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuICBcbkF1dG9Db21wbGV0ZS5kZWZhdWx0UHJvcHMgPSB7XG4gICAgczogMTIsXG4gICAgbTogMTIsXG4gICAgbDogMTIsXG4gICAgeGw6IDEyLFxuICAgIHBsYWNlaG9sZGVyOiBudWxsLFxuICAgIGRhdGE6IFtdLFxuICAgIG9uQ2hhbmdlOiBudWxsLFxuICAgIHZhbHVlOiBudWxsLFxufTtcbiAgXG5leHBvcnQgZGVmYXVsdCBBdXRvQ29tcGxldGU7XG4gICJdfQ==